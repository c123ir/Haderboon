// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// مدل کاربر برای ایجنت هادربون
model User {
  id        String   @id @default(uuid()) // شناسه منحصر به فرد کاربر
  email     String   @unique // ایمیل کاربر (منحصر به فرد)
  username  String   @unique // نام کاربری (منحصر به فرد)
  password  String   // پسورد هش شده کاربر
  name      String?
  createdAt DateTime @default(now()) // زمان ایجاد حساب کاربری
  updatedAt DateTime @updatedAt // زمان آخرین به‌روزرسانی
  
  // ارتباط با سایر مدل‌ها
  projects  Project[] // پروژه‌های متعلق به کاربر
  documents Document[] @relation("DocumentOwner")
  documentVersions DocumentVersion[] @relation("DocumentVersionAuthor")
}

// مدل پروژه
model Project {
  id          String   @id @default(uuid()) // شناسه منحصر به فرد پروژه
  name        String   // نام پروژه
  description String?  // توضیحات پروژه (اختیاری)
  path        String?  // مسیر پروژه (اختیاری)
  ownerId     String   // شناسه مالک پروژه
  owner       User     @relation("ProjectOwner", fields: [ownerId], references: [id]) // ارتباط با کاربر مالک
  createdAt   DateTime @default(now()) // زمان ایجاد پروژه
  updatedAt   DateTime @updatedAt // زمان آخرین به‌روزرسانی
  documents   Document[] @relation("ProjectDocuments")
}

// مدل مستند
model Document {
  id          String    @id @default(uuid())
  title       String
  description String?
  path        String?
  projectId   String
  project     Project   @relation("ProjectDocuments", fields: [projectId], references: [id], onDelete: Cascade)
  ownerId     String
  owner       User      @relation("DocumentOwner", fields: [ownerId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  versions    DocumentVersion[] @relation("DocumentVersions")
  parentId    String?
  parent      Document? @relation("DocumentHierarchy", fields: [parentId], references: [id])
  children    Document[] @relation("DocumentHierarchy")
  tags        String[]
}

// مدل نسخه مستند
model DocumentVersion {
  id          String    @id @default(uuid())
  versionNumber Int
  content     String
  documentId  String
  document    Document  @relation("DocumentVersions", fields: [documentId], references: [id], onDelete: Cascade)
  authorId    String
  author      User      @relation("DocumentVersionAuthor", fields: [authorId], references: [id])
  createdAt   DateTime  @default(now())
  changelog   String?
  isPublished Boolean   @default(false)
}
