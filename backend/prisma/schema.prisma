// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// مدل کاربر برای ایجنت هادربون
model User {
  id        String   @id @default(uuid()) // شناسه منحصر به فرد کاربر
  email     String   @unique // ایمیل کاربر (منحصر به فرد)
  username  String   @unique // نام کاربری (منحصر به فرد)
  password  String // پسورد هش شده کاربر
  name      String?
  role      String   @default("USER") // نقش کاربر (USER, ADMIN)
  createdAt DateTime @default(now()) // زمان ایجاد حساب کاربری
  updatedAt DateTime @updatedAt // زمان آخرین به‌روزرسانی
  
  // ارتباط با سایر مدل‌ها
  projects  Project[] @relation("ProjectOwner")
  documents Document[] @relation("DocumentOwner")
  documentVersions DocumentVersion[] @relation("DocumentVersionAuthor")
}

// مدل پروژه
model Project {
  id          String    @id @default(uuid()) // شناسه منحصر به فرد پروژه
  name        String   // نام پروژه
  description String?  // توضیحات پروژه (اختیاری)
  path        String?  // مسیر پروژه (اختیاری)
  ownerId     String   // شناسه مالک پروژه
  owner       User      @relation("ProjectOwner", fields: [ownerId], references: [id]) // ارتباط با کاربر مالک
  createdAt   DateTime  @default(now()) // زمان ایجاد پروژه
  updatedAt   DateTime  @updatedAt // زمان آخرین به‌روزرسانی
  documents   Document[] @relation("ProjectDocuments")
}

// مدل مستند
model Document {
  id          String    @id @default(uuid())
  title       String
  description String?
  path        String?
  projectId   String
  project     Project   @relation("ProjectDocuments", fields: [projectId], references: [id], onDelete: Cascade)
  ownerId     String
  owner       User      @relation("DocumentOwner", fields: [ownerId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  versions    DocumentVersion[] @relation("DocumentVersions")
  parentId    String?
  parent      Document? @relation("DocumentHierarchy", fields: [parentId], references: [id])
  children    Document[] @relation("DocumentHierarchy")
  tags        String[]
}

// مدل نسخه مستند
model DocumentVersion {
  id          String    @id @default(uuid())
  versionNumber Int
  content     String
  documentId  String
  document    Document  @relation("DocumentVersions", fields: [documentId], references: [id], onDelete: Cascade)
  authorId    String
  author      User      @relation("DocumentVersionAuthor", fields: [authorId], references: [id])
  createdAt   DateTime  @default(now())
  changelog   String?
  isPublished Boolean   @default(false)
}

// مدل سرویس‌دهنده هوش مصنوعی
model AIProvider {
  id          String        @id @default(uuid())
  name        String        // نام سرویس (OpenAI, Google, OpenRouter, ...)
  displayName String        // نام نمایشی
  description String?       // توضیحات
  logoUrl     String?       // آدرس لوگو
  baseUrl     String?       // آدرس پایه API
  isActive    Boolean       @default(false)
  priority    Int           @default(0)  // اولویت استفاده در حالت خودکار
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  apiKeys     AIApiKey[]    // کلیدهای API مرتبط با این سرویس
  models      AIModel[]     // مدل‌های این سرویس
  settings    Json?         // تنظیمات خاص سرویس به صورت JSON
  sessions    AISession[]   // جلسات مکالمه با این سرویس
}

// مدل کلید API هوش مصنوعی
model AIApiKey {
  id          String      @id @default(uuid())
  providerId  String      // ارتباط با سرویس
  provider    AIProvider  @relation(fields: [providerId], references: [id], onDelete: Cascade)
  name        String      // نام نمایشی برای کلید
  key         String      // کلید API (رمزنگاری‌شده)
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  expiresAt   DateTime?   // تاریخ انقضای کلید (اختیاری)
}

// مدل مدل هوش مصنوعی
model AIModel {
  id          String      @id @default(uuid())
  providerId  String      // ارتباط با سرویس
  provider    AIProvider  @relation(fields: [providerId], references: [id], onDelete: Cascade)
  name        String      // نام مدل (gpt-4, claude-2, ...)
  displayName String      // نام نمایشی
  description String?     // توضیحات
  isActive    Boolean     @default(true)
  capabilities String[]   // قابلیت‌های مدل (chat, embedding, ...)
  contextSize Int         // حداکثر اندازه متن ورودی
  settings    Json?       // تنظیمات خاص مدل
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  sessions    AISession[]
}

// مدل جلسه چت با هوش مصنوعی
model AISession {
  id          String      @id @default(uuid())
  title       String      // عنوان جلسه
  providerId  String      // ارتباط با سرویس
  provider    AIProvider  @relation(fields: [providerId], references: [id])
  modelId     String      // ارتباط با مدل
  model       AIModel     @relation(fields: [modelId], references: [id])
  userId      String      // کاربر ایجادکننده
  projectId   String?     // پروژه مرتبط (اختیاری)
  documentId  String?     // مستند مرتبط (اختیاری)
  messages    AIMessage[] // پیام‌های این جلسه
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  settings    Json?       // تنظیمات خاص این جلسه
}

// مدل پیام چت با هوش مصنوعی
model AIMessage {
  id          String      @id @default(uuid())
  sessionId   String      
  session     AISession   @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  role        String      
  content     String      
  usage       Json?       // اضافه کردن فیلد usage به صورت JSON
  createdAt   DateTime    @default(now())
}

// Seed configuration
// prisma = {
//   seed = "npx tsx prisma/seed.ts"
// }
